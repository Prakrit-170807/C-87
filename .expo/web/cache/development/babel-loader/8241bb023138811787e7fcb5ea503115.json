{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Volumes/Coding/NPM/Class Projects/C-87/screens/Feed.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport StoryCard from \"./StoryCard\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport firebase from \"firebase\";\nvar customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nvar stories = require(\"./temp_stories.json\");\n\nvar Feed = function (_Component) {\n  _inherits(Feed, _Component);\n\n  var _super = _createSuper(Feed);\n\n  function Feed(props) {\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    _this = _super.call(this, props);\n\n    _this.fetchUser = function () {\n      var theme;\n      firebase.database().ref(\"/users/\" + firebase.auth().currentUser.uid).on(\"value\", function (snapshot) {\n        theme = snapshot.val().current_theme;\n\n        _this.setState({\n          light_theme: theme === \"light\"\n        });\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var story = _ref.item;\n      return React.createElement(StoryCard, {\n        story: story,\n        navigation: _this.props.navigation,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.state = {\n      fontsLoaded: false,\n      light_theme: true\n    };\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n\n      this.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.fontsLoaded) {\n        return React.createElement(AppLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 14\n          }\n        });\n      } else {\n        return React.createElement(View, {\n          style: this.state.light_theme ? styles.containerLight : styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }\n        }, React.createElement(SafeAreaView, {\n          style: styles.droidSafeArea,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          style: styles.appTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.appIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/logo.png\"),\n          style: styles.iconImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        })), React.createElement(View, {\n          style: styles.appTitleTextContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: this.state.light_theme ? styles.appTitleTextLight : styles.appTitleText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }\n        }, \"Storytelling App\"))), React.createElement(View, {\n          style: styles.cardContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }\n        }, React.createElement(FlatList, {\n          keyExtractor: this.keyExtractor,\n          data: stories,\n          renderItem: this.renderItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 0.08\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport { Feed as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  containerLight: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  appTitleTextLight: {\n    color: \"black\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  cardContainer: {\n    flex: 0.85\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Class Projects/C-87/screens/Feed.js"],"names":["React","Component","RFValue","StoryCard","AppLoading","Font","FlatList","firebase","customFonts","require","stories","Feed","props","fetchUser","theme","database","ref","auth","currentUser","uid","on","snapshot","val","current_theme","setState","light_theme","renderItem","story","item","navigation","keyExtractor","index","toString","state","fontsLoaded","loadAsync","_loadFontsAsync","styles","containerLight","container","droidSafeArea","appTitle","appIcon","iconImage","appTitleTextContainer","appTitleTextLight","appTitleText","cardContainer","flex","StyleSheet","create","backgroundColor","marginTop","Platform","OS","StatusBar","currentHeight","flexDirection","justifyContent","alignItems","width","height","resizeMode","color","fontSize","fontFamily"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  StatusBar,\n  Image\n} from \"react-native\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport StoryCard from \"./StoryCard\";\n\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport firebase from \"firebase\";\n\nlet customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nlet stories = require(\"./temp_stories.json\");\n\nexport default class Feed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fontsLoaded: false,\n      light_theme: true\n    };\n  }\n\n  async _loadFontsAsync() {\n    await Font.loadAsync(customFonts);\n    this.setState({ fontsLoaded: true });\n  }\n\n  componentDidMount() {\n    this._loadFontsAsync();\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    let theme;\n    firebase\n      .database()\n      .ref(\"/users/\" + firebase.auth().currentUser.uid)\n      .on(\"value\", snapshot => {\n        theme = snapshot.val().current_theme;\n        this.setState({ light_theme: theme === \"light\" });\n      });\n  };\n\n  renderItem = ({ item: story }) => {\n    return <StoryCard story={story} navigation={this.props.navigation} />;\n  };\n\n  keyExtractor = (item, index) => index.toString();\n\n  render() {\n    if (!this.state.fontsLoaded) {\n      return <AppLoading />;\n    } else {\n      return (\n        <View\n          style={\n            this.state.light_theme ? styles.containerLight : styles.container\n          }\n        >\n          <SafeAreaView style={styles.droidSafeArea} />\n          <View style={styles.appTitle}>\n            <View style={styles.appIcon}>\n              <Image\n                source={require(\"../assets/logo.png\")}\n                style={styles.iconImage}\n              ></Image>\n            </View>\n            <View style={styles.appTitleTextContainer}>\n              <Text\n                style={\n                  this.state.light_theme\n                    ? styles.appTitleTextLight\n                    : styles.appTitleText\n                }\n              >\n                Storytelling App\n              </Text>\n            </View>\n          </View>\n          <View style={styles.cardContainer}>\n            <FlatList\n              keyExtractor={this.keyExtractor}\n              data={stories}\n              renderItem={this.renderItem}\n            />\n          </View>\n          <View style={{ flex: 0.08 }} />\n        </View>\n      );\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  containerLight: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  appTitleTextLight: {\n    color: \"black\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  cardContainer: {\n    flex: 0.85\n  }\n});\n"]},"metadata":{},"sourceType":"module"}