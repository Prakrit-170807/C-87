{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Volumes/Coding/NPM/Class Projects/C-87/screens/CreateStory.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport firebase from \"firebase\";\nvar customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nvar CreateStory = function (_Component) {\n  _inherits(CreateStory, _Component);\n\n  var _super = _createSuper(CreateStory);\n\n  function CreateStory(props) {\n    var _this;\n\n    _classCallCheck(this, CreateStory);\n\n    _this = _super.call(this, props);\n\n    _this.fetchUser = function () {\n      var theme;\n      firebase.database().ref(\"/users/\" + firebase.auth().currentUser.uid).on(\"value\", function (snapshot) {\n        theme = snapshot.val().current_theme;\n\n        _this.setState({\n          light_theme: theme === \"light\"\n        });\n      });\n    };\n\n    _this.state = {\n      fontsLoaded: false,\n      previewImage: \"image_1\",\n      light_theme: true,\n      dropdownHeight: 40\n    };\n    return _this;\n  }\n\n  _createClass(CreateStory, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n\n      this.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.fontsLoaded) {\n        return React.createElement(AppLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 14\n          }\n        });\n      } else {\n        var preview_images = {\n          image_1: require(\"../assets/story_image_1.png\"),\n          image_2: require(\"../assets/story_image_2.png\"),\n          image_3: require(\"../assets/story_image_3.png\"),\n          image_4: require(\"../assets/story_image_4.png\"),\n          image_5: require(\"../assets/story_image_5.png\")\n        };\n        return React.createElement(View, {\n          style: this.state.light_theme ? styles.containerLight : styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }\n        }, React.createElement(SafeAreaView, {\n          style: styles.droidSafeArea,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          style: styles.appTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.appIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/logo.png\"),\n          style: styles.iconImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }\n        })), React.createElement(View, {\n          style: styles.appTitleTextContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: this.state.light_theme ? styles.appTitleTextLight : styles.appTitleText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }\n        }, \"New Story\"))), React.createElement(View, {\n          style: styles.fieldsContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }\n        }, React.createElement(ScrollView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: preview_images[this.state.previewImage],\n          style: styles.previewImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }\n        }), React.createElement(View, {\n          style: {\n            height: RFValue(this.state.dropdownHeight)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }\n        }, React.createElement(DropDownPicker, {\n          items: [{\n            label: \"Image 1\",\n            value: \"image_1\"\n          }, {\n            label: \"Image 2\",\n            value: \"image_2\"\n          }, {\n            label: \"Image 3\",\n            value: \"image_3\"\n          }, {\n            label: \"Image 4\",\n            value: \"image_4\"\n          }, {\n            label: \"Image 5\",\n            value: \"image_5\"\n          }],\n          defaultValue: this.state.previewImage,\n          containerStyle: {\n            height: 40,\n            borderRadius: RFValue(20),\n            marginBottom: RFValue(20),\n            marginHorizontal: RFValue(10)\n          },\n          onOpen: function onOpen() {\n            _this2.setState({\n              dropdownHeight: 170\n            });\n          },\n          onClose: function onClose() {\n            _this2.setState({\n              dropdownHeight: 40\n            });\n          },\n          style: {\n            backgroundColor: \"transparent\"\n          },\n          itemStyle: {\n            justifyContent: \"flex-start\"\n          },\n          dropDownStyle: {\n            backgroundColor: this.state.light_theme ? \"#eee\" : \"#2f345d\"\n          },\n          labelStyle: this.state.light_theme ? styles.dropdownLabelLight : styles.dropdownLabel,\n          arrowStyle: this.state.light_theme ? styles.dropdownLabelLight : styles.dropdownLabel,\n          onChangeItem: function onChangeItem(item) {\n            return _this2.setState({\n              previewImage: item.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }\n        })), React.createElement(View, {\n          style: {\n            marginHorizontal: RFValue(10)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }\n        }, React.createElement(TextInput, {\n          style: this.state.light_theme ? styles.inputFontLight : styles.inputFont,\n          onChangeText: function onChangeText(title) {\n            return _this2.setState({\n              title: title\n            });\n          },\n          placeholder: \"Title\",\n          placeholderTextColor: this.state.light_theme ? \"black\" : \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }\n        }), React.createElement(TextInput, {\n          style: [this.state.light_theme ? styles.inputFontLight : styles.inputFont, styles.inputFontExtra, styles.inputTextBig],\n          onChangeText: function onChangeText(description) {\n            return _this2.setState({\n              description: description\n            });\n          },\n          placeholder: \"Description\",\n          multiline: true,\n          numberOfLines: 4,\n          placeholderTextColor: this.state.light_theme ? \"black\" : \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }\n        }), React.createElement(TextInput, {\n          style: [this.state.light_theme ? styles.inputFontLight : styles.inputFont, styles.inputFontExtra, styles.inputTextBig],\n          onChangeText: function onChangeText(story) {\n            return _this2.setState({\n              story: story\n            });\n          },\n          placeholder: \"Story\",\n          multiline: true,\n          numberOfLines: 20,\n          placeholderTextColor: this.state.light_theme ? \"black\" : \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }\n        }), React.createElement(TextInput, {\n          style: [this.state.light_theme ? styles.inputFontLight : styles.inputFont, styles.inputFontExtra, styles.inputTextBig],\n          onChangeText: function onChangeText(moral) {\n            return _this2.setState({\n              moral: moral\n            });\n          },\n          placeholder: \"Moral of the story\",\n          multiline: true,\n          numberOfLines: 4,\n          placeholderTextColor: this.state.light_theme ? \"black\" : \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }\n        })))), React.createElement(View, {\n          style: {\n            flex: 0.08\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  }]);\n\n  return CreateStory;\n}(Component);\n\nexport { CreateStory as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  containerLight: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  appTitleTextLight: {\n    color: \"black\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  fieldsContainer: {\n    flex: 0.85\n  },\n  previewImage: {\n    width: \"93%\",\n    height: RFValue(250),\n    alignSelf: \"center\",\n    borderRadius: RFValue(10),\n    marginVertical: RFValue(10),\n    resizeMode: \"contain\"\n  },\n  inputFont: {\n    height: RFValue(40),\n    borderColor: \"white\",\n    borderWidth: RFValue(1),\n    borderRadius: RFValue(10),\n    paddingLeft: RFValue(10),\n    color: \"white\",\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  inputFontLight: {\n    height: RFValue(40),\n    borderColor: \"black\",\n    borderWidth: RFValue(1),\n    borderRadius: RFValue(10),\n    paddingLeft: RFValue(10),\n    color: \"black\",\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  dropdownLabel: {\n    color: \"white\",\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  dropdownLabelLight: {\n    color: \"black\",\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  inputFontExtra: {\n    marginTop: RFValue(15)\n  },\n  inputTextBig: {\n    textAlignVertical: \"top\",\n    padding: RFValue(5)\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Class Projects/C-87/screens/CreateStory.js"],"names":["React","Component","DropDownPicker","RFValue","AppLoading","Font","firebase","customFonts","require","CreateStory","props","fetchUser","theme","database","ref","auth","currentUser","uid","on","snapshot","val","current_theme","setState","light_theme","state","fontsLoaded","previewImage","dropdownHeight","loadAsync","_loadFontsAsync","preview_images","image_1","image_2","image_3","image_4","image_5","styles","containerLight","container","droidSafeArea","appTitle","appIcon","iconImage","appTitleTextContainer","appTitleTextLight","appTitleText","fieldsContainer","height","label","value","borderRadius","marginBottom","marginHorizontal","backgroundColor","justifyContent","dropdownLabelLight","dropdownLabel","item","inputFontLight","inputFont","title","inputFontExtra","inputTextBig","description","story","moral","flex","StyleSheet","create","marginTop","Platform","OS","StatusBar","currentHeight","flexDirection","alignItems","width","resizeMode","color","fontSize","fontFamily","alignSelf","marginVertical","borderColor","borderWidth","paddingLeft","textAlignVertical","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  StatusBar,\n  Image,\n  ScrollView,\n  TextInput,\n  Dimensions\n} from \"react-native\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport firebase from \"firebase\";\n\nlet customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nexport default class CreateStory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fontsLoaded: false,\n      previewImage: \"image_1\",\n      light_theme: true,\n      dropdownHeight: 40\n    };\n  }\n\n  async _loadFontsAsync() {\n    await Font.loadAsync(customFonts);\n    this.setState({ fontsLoaded: true });\n  }\n\n  componentDidMount() {\n    this._loadFontsAsync();\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    let theme;\n    firebase\n      .database()\n      .ref(\"/users/\" + firebase.auth().currentUser.uid)\n      .on(\"value\", snapshot => {\n        theme = snapshot.val().current_theme;\n        this.setState({ light_theme: theme === \"light\" });\n      });\n  };\n\n  render() {\n    if (!this.state.fontsLoaded) {\n      return <AppLoading />;\n    } else {\n      let preview_images = {\n        image_1: require(\"../assets/story_image_1.png\"),\n        image_2: require(\"../assets/story_image_2.png\"),\n        image_3: require(\"../assets/story_image_3.png\"),\n        image_4: require(\"../assets/story_image_4.png\"),\n        image_5: require(\"../assets/story_image_5.png\")\n      };\n      return (\n        <View\n          style={\n            this.state.light_theme ? styles.containerLight : styles.container\n          }\n        >\n          <SafeAreaView style={styles.droidSafeArea} />\n          <View style={styles.appTitle}>\n            <View style={styles.appIcon}>\n              <Image\n                source={require(\"../assets/logo.png\")}\n                style={styles.iconImage}\n              ></Image>\n            </View>\n            <View style={styles.appTitleTextContainer}>\n              <Text\n                style={\n                  this.state.light_theme\n                    ? styles.appTitleTextLight\n                    : styles.appTitleText\n                }\n              >\n                New Story\n              </Text>\n            </View>\n          </View>\n          <View style={styles.fieldsContainer}>\n            <ScrollView>\n              <Image\n                source={preview_images[this.state.previewImage]}\n                style={styles.previewImage}\n              ></Image>\n\n              <View style={{ height: RFValue(this.state.dropdownHeight) }}>\n                <DropDownPicker\n                  items={[\n                    { label: \"Image 1\", value: \"image_1\" },\n                    { label: \"Image 2\", value: \"image_2\" },\n                    { label: \"Image 3\", value: \"image_3\" },\n                    { label: \"Image 4\", value: \"image_4\" },\n                    { label: \"Image 5\", value: \"image_5\" }\n                  ]}\n                  defaultValue={this.state.previewImage}\n                  containerStyle={{\n                    height: 40,\n                    borderRadius: RFValue(20),\n                    marginBottom: RFValue(20),\n                    marginHorizontal: RFValue(10)\n                  }}\n                  onOpen={() => {\n                    this.setState({ dropdownHeight: 170 });\n                  }}\n                  onClose={() => {\n                    this.setState({ dropdownHeight: 40 });\n                  }}\n                  style={{ backgroundColor: \"transparent\" }}\n                  itemStyle={{\n                    justifyContent: \"flex-start\"\n                  }}\n                  dropDownStyle={{\n                    backgroundColor: this.state.light_theme ? \"#eee\" : \"#2f345d\"\n                  }}\n                  labelStyle={\n                    this.state.light_theme\n                      ? styles.dropdownLabelLight\n                      : styles.dropdownLabel\n                  }\n                  arrowStyle={\n                    this.state.light_theme\n                      ? styles.dropdownLabelLight\n                      : styles.dropdownLabel\n                  }\n                  onChangeItem={item =>\n                    this.setState({\n                      previewImage: item.value\n                    })\n                  }\n                />\n              </View>\n              <View style={{ marginHorizontal: RFValue(10) }}>\n                <TextInput\n                  style={\n                    this.state.light_theme\n                      ? styles.inputFontLight\n                      : styles.inputFont\n                  }\n                  onChangeText={title => this.setState({ title })}\n                  placeholder={\"Title\"}\n                  placeholderTextColor={\n                    this.state.light_theme ? \"black\" : \"white\"\n                  }\n                />\n                <TextInput\n                  style={[\n                    this.state.light_theme\n                      ? styles.inputFontLight\n                      : styles.inputFont,\n                    styles.inputFontExtra,\n                    styles.inputTextBig\n                  ]}\n                  onChangeText={description => this.setState({ description })}\n                  placeholder={\"Description\"}\n                  multiline={true}\n                  numberOfLines={4}\n                  placeholderTextColor={\n                    this.state.light_theme ? \"black\" : \"white\"\n                  }\n                />\n                <TextInput\n                  style={[\n                    this.state.light_theme\n                      ? styles.inputFontLight\n                      : styles.inputFont,\n                    styles.inputFontExtra,\n                    styles.inputTextBig\n                  ]}\n                  onChangeText={story => this.setState({ story })}\n                  placeholder={\"Story\"}\n                  multiline={true}\n                  numberOfLines={20}\n                  placeholderTextColor={\n                    this.state.light_theme ? \"black\" : \"white\"\n                  }\n                />\n                <TextInput\n                  style={[\n                    this.state.light_theme\n                      ? styles.inputFontLight\n                      : styles.inputFont,\n                    styles.inputFontExtra,\n                    styles.inputTextBig\n                  ]}\n                  onChangeText={moral => this.setState({ moral })}\n                  placeholder={\"Moral of the story\"}\n                  multiline={true}\n                  numberOfLines={4}\n                  placeholderTextColor={\n                    this.state.light_theme ? \"black\" : \"white\"\n                  }\n                />\n              </View>\n            </ScrollView>\n          </View>\n          <View style={{ flex: 0.08 }} />\n        </View>\n      );\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  containerLight: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  appTitleTextLight: {\n    color: \"black\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  fieldsContainer: {\n    flex: 0.85\n  },\n  previewImage: {\n    width: \"93%\",\n    height: RFValue(250),\n    alignSelf: \"center\",\n    borderRadius: RFValue(10),\n    marginVertical: RFValue(10),\n    resizeMode: \"contain\"\n  },\n  inputFont: {\n    height: RFValue(40),\n    borderColor: \"white\",\n    borderWidth: RFValue(1),\n    borderRadius: RFValue(10),\n    paddingLeft: RFValue(10),\n    color: \"white\",\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  inputFontLight: {\n    height: RFValue(40),\n    borderColor: \"black\",\n    borderWidth: RFValue(1),\n    borderRadius: RFValue(10),\n    paddingLeft: RFValue(10),\n    color: \"black\",\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  dropdownLabel: {\n    color: \"white\",\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  dropdownLabelLight: {\n    color: \"black\",\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  inputFontExtra: {\n    marginTop: RFValue(15)\n  },\n  inputTextBig: {\n    textAlignVertical: \"top\",\n    padding: RFValue(5)\n  }\n});\n"]},"metadata":{},"sourceType":"module"}